
==================== FINAL INTERFACE ====================
2019-07-04 12:19:19.924686 UTC

interface main:Main 8065
  interface hash: edea13fc257b0a641e3612de98566fda
  ABI hash: fd0940eaf3bcb3b957f0881fe5ea11b1
  export-list hash: fb6e573ebccc077033332ce9154e686e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6a9baec2044a615c4cb8c7558067271a
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.cairo
  Main.main
  Main.renderSketch
  Main.Generate
  Main.World{Main.World worldHeight worldScale worldSeed worldWidth}
module dependencies:
package dependencies: MonadRandom-0.5.1.1 StateVar-1.1.1.1
                      adjunctions-4.4 array-0.5.3.0 base-4.12.0.0 base-orphans-0.8.1
                      bifunctors-5.5.4 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      cairo-0.13.6.0 call-stack-0.1.0 cereal-0.5.8.1 colour-2.3.5
                      comonad-5.0.5 containers-0.6.0.1 contravariant-1.5.2
                      deepseq-1.4.4.0 distributive-0.6 exceptions-0.10.2 free-5.1.1
                      ghc-boot-th-8.6.5 ghc-prim-0.5.3 hashable-1.2.7.0 hsnoise-0.0.2
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.3 kan-extensions-5.2
                      lens-4.17.1 linear-1.20.9 mtl-2.2.2 pretty-1.1.3.6
                      primitive-0.6.4.0 profunctors-5.3 random-1.1 reflection-2.1.4
                      scientific-0.3.6.2 semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 th-abstraction-0.2.11.0
                      time-1.8.0.2 transformers-0.5.6.2 transformers-base-0.4.5.2
                      transformers-compat-0.6.5 unordered-containers-0.2.10.0
                      utf8-string-1.0.1.1 vector-0.12.0.3
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         reflection-2.1.4:Data.Reflection stm-2.5.0.0:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show linear-1.20.9:Linear.Instances
         vector-0.12.0.3:Data.Vector.Unboxed
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: MonadRandom-0.5.1.1:Control.Monad.Trans.Random.Lazy
                         adjunctions-4.4:Data.Functor.Rep base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.4:Data.Bifunctor.Biff
                         bifunctors-5.5.4:Data.Bifunctor.Clown
                         bifunctors-5.5.4:Data.Bifunctor.Fix
                         bifunctors-5.5.4:Data.Bifunctor.Flip
                         bifunctors-5.5.4:Data.Bifunctor.Join
                         bifunctors-5.5.4:Data.Bifunctor.Joker
                         bifunctors-5.5.4:Data.Bifunctor.Product
                         bifunctors-5.5.4:Data.Bifunctor.Sum
                         bifunctors-5.5.4:Data.Bifunctor.Tannen
                         bifunctors-5.5.4:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         free-5.1.1:Control.Comonad.Cofree
                         free-5.1.1:Control.Comonad.Trans.Cofree
                         free-5.1.1:Control.Monad.Free free-5.1.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17.1:Control.Lens.At
                         lens-4.17.1:Control.Lens.Internal.Indexed
                         lens-4.17.1:Control.Lens.Reified lens-4.17.1:Control.Lens.Tuple
                         lens-4.17.1:Control.Lens.Wrapped lens-4.17.1:Control.Lens.Zoom
                         linear-1.20.9:Linear.V linear-1.20.9:Linear.V1
                         linear-1.20.9:Linear.V2
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
import  -/  MonadRandom-0.5.1.1:Control.Monad.Random 662a8861d2d42909e00e454cc9fdb6ab
import  -/  MonadRandom-0.5.1.1:Control.Monad.Trans.Random.Lazy 3f148b88e71fcd0e1bd7162affd4d69b
import  -/  base-4.12.0.0:Control.Arrow cda881e865dd3141fb08ed18f2efcca7
import  -/  base-4.12.0.0:Control.Concurrent 945d3c1c41ed03e6117e3861cad65d9f
import  -/  base-4.12.0.0:Data.Foldable efb37371da929e7bc88d896298d2d979
import  -/  base-4.12.0.0:Data.Functor 069b2025a03e32fd228e74a86a58a075
import  -/  base-4.12.0.0:Data.List 17d0c71c557e42abe196f130788fd997
import  -/  base-4.12.0.0:Data.Semigroup 77d0b010ed701f8a1da4f6d7b4d5812e
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Real af2b985dd29515c375fb78b2c9298d42
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.IO c961e5ee6731c0683a6e879272c9e9f6
import  -/  base-4.12.0.0:Text.Printf d9e1f32eb8aa55bafa1cf4360210b275
import  -/  cairo-0.13.6.0:Graphics.Rendering.Cairo 7901083a79c22129d9791c7e13650ca6
import  -/  cairo-0.13.6.0:Graphics.Rendering.Cairo.Internal d2b849b5ac352976c06fac59650aa09c
import  -/  cairo-0.13.6.0:Graphics.Rendering.Cairo.Types cb175531dd6027d9f401d4eefcd829a7
import  -/  colour-2.3.5:Data.Colour.RGBSpace 73d0c83137e715943b8d258bd98a9696
import  -/  colour-2.3.5:Data.Colour.RGBSpace.HSV 07a6f3275cb693f3f5c3b1d0a122d98e
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  hsnoise-0.0.2:Numeric.Noise.Perlin dc2f5b181a9de348329a9db8ad090137
import  -/  linear-1.20.9:Linear.V2 7b810071cc130e0a4943e67deacf6661
import  -/  linear-1.20.9:Linear.Vector b684e2cb1930f5856b0e9fe010d22a0a
import  -/  mtl-2.2.2:Control.Monad.Reader d5c3a33f1c95bb71f4ae02f87a7048ff
import  -/  random-1.1:System.Random 92935f2739d08d3c469b92fe5ac17118
import  -/  time-1.8.0.2:Data.Time.Clock.POSIX 9cecc2051debab576bd5d468a9a020cc
import  -/  transformers-0.5.6.2:Control.Monad.Trans.Class ce71df227db199c1d525fc0992381112
import  -/  transformers-0.5.6.2:Control.Monad.Trans.Reader 047d9523dd0b97f3c42ee03eae49a228
8095624139cf29c119e7a86185a25c07
  $tc'World :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   727643425223383654##
                   14955058124331331850##
                   Main.$trModule
                   Main.$tc'World2
                   0#
                   Main.$tc'World1) -}
614d9a6de836cfabd7b14c033e576db2
  $tc'World1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ffb5945b05ae0b26c5dbf317d49effd5
  $tc'World2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'World3) -}
830f461bc82d77c1fa0d6630e734d53b
  $tc'World3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'World"#) -}
c60a5fa54bfedb16a997175b5ce064c5
  $tcWorld :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15529728488791361232##
                   131930431111764925##
                   Main.$trModule
                   Main.$tcWorld1
                   0#
                   GHC.Types.krep$*) -}
96f63b929892a146ebd7e5a20bcc19af
  $tcWorld1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcWorld2) -}
47b4c561386d235405cf9eb0bc8850e6
  $tcWorld2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("World"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
1fcb28f539d924674aa810bf10ca7688
  type Generate a =
    Control.Monad.Trans.Random.Lazy.RandT
      System.Random.StdGen
      (Control.Monad.Trans.Reader.ReaderT
         Main.World Graphics.Rendering.Cairo.Internal.Render)
      a
c1e2f806fbb5a59f4415b53be282be4c
  data World
    = World {worldWidth :: GHC.Types.Int,
             worldHeight :: GHC.Types.Int,
             worldSeed :: GHC.Types.Int,
             worldScale :: GHC.Types.Double}
a2aec1f1d58114e8643553337a662757
  cairo ::
    Graphics.Rendering.Cairo.Internal.Render a -> Main.Generate a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,U)))><L,U><L,A><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cairo1
                  `cast`
                (forall (a :: <*>_N).
                 <Graphics.Rendering.Cairo.Internal.Render a>_R
                 ->_R (<System.Random.StdGen>_R
                       ->_R <Main.World>_R
                       ->_R (<Graphics.Rendering.Cairo.Types.Cairo>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           <(a,
                                             System.Random.StdGen)>_R)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                    <Graphics.Rendering.Cairo.Types.Cairo>_R
                                                                                    <GHC.Types.IO>_R
                                                                                    <(a,
                                                                                      System.Random.StdGen)>_N) ; Sym (Graphics.Rendering.Cairo.Internal.N:Render[0]) <(a,
                                                                                                                                                                        System.Random.StdGen)>_N)) ; Nth:3
                                                                                                                                                                                                         (<Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                                                                             Main.World
                                                                                                                                                                                                             Graphics.Rendering.Cairo.Internal.Render
                                                                                                                                                                                                             a>_R
                                                                                                                                                                                                          ->_R (<System.Random.StdGen>_R
                                                                                                                                                                                                                ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                                                                                              <Main.World>_R
                                                                                                                                                                                                                              <Graphics.Rendering.Cairo.Internal.Render>_R
                                                                                                                                                                                                                              <(a,
                                                                                                                                                                                                                                System.Random.StdGen)>_N)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                                                                                                                                                                       <System.Random.StdGen>_N
                                                                                                                                                                                                                                                                       <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                                                                                                                                          Main.World
                                                                                                                                                                                                                                                                          Graphics.Rendering.Cairo.Internal.Render>_R
                                                                                                                                                                                                                                                                       <a>_N) ; Sym (Control.Monad.Trans.Random.Lazy.N:RandT[0]) <System.Random.StdGen>_N <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                                                                                                                                                                                                                             Main.World
                                                                                                                                                                                                                                                                                                                                                             Graphics.Rendering.Cairo.Internal.Render>_N <a>_N))) -}
5e57b81c1abc5136ef1dc5e05ef5e03e
  cairo1 ::
    Graphics.Rendering.Cairo.Internal.Render a
    -> System.Random.StdGen
    -> Main.World
    -> Graphics.Rendering.Cairo.Types.Cairo
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (a, System.Random.StdGen) #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,U)))><L,U><L,A><L,U><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (x :: Graphics.Rendering.Cairo.Internal.Render a)
                   (eta :: System.Random.StdGen)
                   (eta1 :: Main.World)
                   (eta2 :: Graphics.Rendering.Cairo.Types.Cairo)
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (x `cast`
                       (Graphics.Rendering.Cairo.Internal.N:Render[0] <a>_N ; Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                  <Graphics.Rendering.Cairo.Types.Cairo>_R
                                                                                  <GHC.Types.IO>_R
                                                                                  <a>_N)
                         eta2)
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        eta3 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (ipv1, eta) #) }) -}
b4f9ae97a091b232a88173a93240314d
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
529073e95d7e97cca9b9c5c633464b51
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
99daeed6096e4af3040fe9786d83ebc9
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
8a5f7905e33e0e6f2200dbee991b2bf1
  renderSketch :: Main.Generate ()
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,A><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.renderSketch1
                  `cast`
                ((<System.Random.StdGen>_R
                  ->_R (<Main.World>_R
                        ->_R (<Graphics.Rendering.Cairo.Types.Cairo>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <((),
                                              System.Random.StdGen)>_R)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                     <Graphics.Rendering.Cairo.Types.Cairo>_R
                                                                                     <GHC.Types.IO>_R
                                                                                     <((),
                                                                                       System.Random.StdGen)>_N) ; Sym (Graphics.Rendering.Cairo.Internal.N:Render[0]) <((),
                                                                                                                                                                         System.Random.StdGen)>_N)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                                                                               <Main.World>_R
                                                                                                                                                                                                               <Graphics.Rendering.Cairo.Internal.Render>_R
                                                                                                                                                                                                               <((),
                                                                                                                                                                                                                 System.Random.StdGen)>_N)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                                                                                                                                                        <System.Random.StdGen>_N
                                                                                                                                                                                                                                                        <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                                                                                                                           Main.World
                                                                                                                                                                                                                                                           Graphics.Rendering.Cairo.Internal.Render>_R
                                                                                                                                                                                                                                                        <()>_N) ; Sym (Control.Monad.Trans.Random.Lazy.N:RandT[0]) <System.Random.StdGen>_N <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                                                                                                                                                                                                               Main.World
                                                                                                                                                                                                                                                                                                                                               Graphics.Rendering.Cairo.Internal.Render>_N <()>_N)) -}
18304438562302e0d048feca9ee1a843
  renderSketch1 ::
    System.Random.StdGen
    -> Main.World
    -> Graphics.Rendering.Cairo.Types.Cairo
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), System.Random.StdGen) #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,A><L,A><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (eta1 :: System.Random.StdGen)
                   (eta :: Main.World)
                   (eta2 :: Graphics.Rendering.Cairo.Types.Cairo)
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta3, (GHC.Tuple.(), eta1) #)) -}
c1e2f806fbb5a59f4415b53be282be4c
  worldHeight :: Main.World -> GHC.Types.Int
  RecSel Left Main.World
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.World) ->
                 case ds of wild { Main.World ds1 ds2 ds3 ds4 -> ds2 }) -}
c1e2f806fbb5a59f4415b53be282be4c
  worldScale :: Main.World -> GHC.Types.Double
  RecSel Left Main.World
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.World) ->
                 case ds of wild { Main.World ds1 ds2 ds3 ds4 -> ds4 }) -}
c1e2f806fbb5a59f4415b53be282be4c
  worldSeed :: Main.World -> GHC.Types.Int
  RecSel Left Main.World
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.World) ->
                 case ds of wild { Main.World ds1 ds2 ds3 ds4 -> ds3 }) -}
c1e2f806fbb5a59f4415b53be282be4c
  worldWidth :: Main.World -> GHC.Types.Int
  RecSel Left Main.World
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.World) ->
                 case ds of wild { Main.World ds1 ds2 ds3 ds4 -> ds1 }) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

